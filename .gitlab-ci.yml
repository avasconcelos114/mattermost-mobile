image: avasconcelos114/docker-java-node

variables:
  ANDROID_COMPILE_SDK: "27"
  ANDROID_BUILD_TOOLS: "27.0.3"
  ANDROID_SDK_TOOLS:   "4333796"

stages:
  - install_dependencies
  - test
  - pull_upstream
  - rebase
  - build_android

cache:
  paths:
    - node_modules/
    - dist/

install_dependencies:
  stage: install_dependencies
  script:
    - rm -rf node_modules && npm install
    - cd node_modules/mattermost-redux && npm install 
    - npm run build
    - cd ../../
    - rm -rf dist && make dist/assets
  artifacts:
    paths:
      - node_modules/
      - dist/

run_unit_tests:
  stage: test
  script:
    - find dist/assets/ -name config.json
    - npm run check
    - npm test

pull_master_upstream:
  stage: pull_upstream
  only:
    - schedules 
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )' 
    - eval $(ssh-agent -s) 
    - ssh-add <(echo "$SSH_PRIVATE_KEY")  
    - mkdir -p ~/.ssh 
    - chmod 700 ~/.ssh 
    - git config --global user.email "andre.tito@architectgroup.com" 
    - git config --global user.name "Andre Vasconcelos" 

  script:
    - git clone https://andre.tito:andretito14@dev.architectgroup.com/argp/mchat/mchat-mobile.git
    - cd *mobile
    - git remote add upstream https://github.com/mattermost/mattermost-mobile.git
    - git pull upstream master
    - git push origin master

rebase_to_master:
  stage: rebase
  only:
    - schedules
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )' 
    - eval $(ssh-agent -s) 
    - ssh-add <(echo "$SSH_PRIVATE_KEY")  
    - mkdir -p ~/.ssh 
    - chmod 700 ~/.ssh 
    - git config --global user.email "andre.tito@architectgroup.com" 
    - git config --global user.name "Andre Vasconcelos" 

  script:
    - git clone https://andre.tito:andretito14@dev.architectgroup.com/argp/mchat/mchat-mobile.git
    - cd *mobile
    - git checkout develop
    - git rebase origin/master
    - git push --force origin develop

build_android:
  stage: build_android
  only:
    - schedules
  before_script:
    - cd ~
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
    - unzip -d android-sdk-linux android-sdk.zip
    - mkdir ~/.android && touch ~/.android/repositories.cfg
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-27" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "tools" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;23.0.3" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;25.0.3" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;26.0.1" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;27.0.1" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;27.0.3" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;28.0.3" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "extras;android;m2repository" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "extras;google;m2repository" >/dev/null
    - export ANDROID_HOME=/root/android-sdk-linux
    - export PATH=$PATH:/root/android-sdk-linux/platform-tools/
    - cd /builds/argp/mchat/mchat-mobile/
  script:
    - git checkout develop
    - git reset --hard origin/develop
    - cd android
    - ./gradlew assembleRelease
